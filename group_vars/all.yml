---
account_default_user_fullname: John Doe
account_default_user_email: john.doe@example.com
account_pro_user_email:
# got by `gpg --list-secret-keys --keyid-format LONG`
account_git_gpg_key_id:
account_git_pro_gpg_key_id:
gitdir_pro: ~/git/pro/

locale_generate:
  -
    lang: 'en_US'
    charset: 'UTF-8'
  -
    lang: 'fr_FR'
    charset: 'UTF-8'

locale_timezone_continent: Europe
locale_timezone_city: Paris

locale_default_lang: fr_FR
locale_default_charset: UTF-8

locale_env:
  lang: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  language: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_all: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_address: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_collate: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_ctype: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_identification: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_measurement: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_messages: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_monetary: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_name: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_numeric: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_paper: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_telephone: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  lc_time: "{{ locale_default_lang }}.{{ locale_default_charset }}"
  locpath: ~

keyboard_layout_reconfigure: true
keyboard_layout_code: fr

apt_sources_lists_default:
    # Debian
    -
        comment: Official repositories
        file: /etc/apt/sources.list
        distrib: Debian
        repositories:
            -
                comment: 'Main repositories'
                enabled: true
                src_enabled: true
                url: 'http://httpredir.debian.org/debian/'
                packages: ['main','contrib','non-free']
                section:  "{{ ansible_distribution_release }}"
            -
                comment: 'Updates repositories'
                enabled: true
                src_enabled: true
                url: 'http://httpredir.debian.org/debian/'
                packages: ['main','contrib','non-free']
                section:  "{{ ansible_distribution_release }}-updates"
            -
                comment: 'Security Updates repositories'
                enabled: true
                src_enabled: true
                url: 'http://security.debian.org/'
                packages: ['main','contrib','non-free']
                section:  "{{ ansible_distribution_release }}/updates"
            -
                comment: 'Backports repositories'
                enabled: true
                src_enabled: true
                url: 'http://httpredir.debian.org/debian/'
                packages: ['main','contrib','non-free']
                section:  "{{ ansible_distribution_release }}-backports"

    # Ubuntu
    -
        comment: Official repositories
        file: /etc/apt/sources.list
        distrib: Ubuntu
        repositories:
            -
                comment: 'Main repositories'
                enabled: true
                src_enabled: true
                url: 'http://fr.archive.ubuntu.com/ubuntu/'
                packages: ['main', 'restricted', 'universe', 'multiverse']
                section:  "{{ ansible_distribution_release }}"
            -
                comment: 'Update repositories'
                enabled: true
                src_enabled: true
                url: 'http://fr.archive.ubuntu.com/ubuntu/'
                packages: ['main', 'restricted', 'universe', 'multiverse']
                section:  "{{ ansible_distribution_release }}-updates"
            -
                comment: 'Security Update repositories'
                enabled: true
                src_enabled: true
                url: 'http://security.ubuntu.com/ubuntu'
                packages: ['main', 'restricted', 'universe', 'multiverse']
                section:  "{{ ansible_distribution_release }}-security"
            -
                comment: 'Partner repositories'
                enabled: true
                src_enabled: true
                url: 'http://archive.canonical.com/ubuntu'
                packages: ['partner']
                section:  "{{ ansible_distribution_release }}"
            -
                comment: 'Backports repositories'
                enabled: true
                src_enabled: true
                url: 'http://fr.archive.ubuntu.com/ubuntu'
                packages: ['main', 'restricted', 'universe', 'multiverse']
                section:  "{{ ansible_distribution_release }}-backports"

apt_sources_lists_extra:
    -
        comment: Google chrome repository
        file: /etc/apt/sources.list.d/google-chrome.list
        distrib: ubuntu
        repositories:
            -
                comment:
                enabled: true
                src_enabled: false
                url: 'https://dl.google.com/linux/chrome/deb/'
                section:  'stable'
                packages: ['main']
                archs: ['amd64']
                # key_server:
                key_url: https://dl.google.com/linux/linux_signing_key.pub
                # key_id:
    -
        comment: Virtualbox repository
        file: /etc/apt/sources.list.d/virtualbox.list
        distrib: ubuntu
        repositories:
            -
                comment:
                enabled: true
                src_enabled: false
                url: 'http://download.virtualbox.org/virtualbox/debian'
                packages: ['contrib']
                archs: ['amd64']
                # key_server:
                key_url: https://www.virtualbox.org/download/oracle_vbox_2016.asc
                # key_id:

apt_upgrade_type: dist
apt_upgrade: true

# list of extra packages to install
apt_extra_packages:
  # - ack-grep # not in Ubuntu 17.10
  - p7zip-rar
  - lftp
  - dos2unix
  # - openssh-blacklist
  # - openssh-blacklist-extra
  # - openssl-blacklist
  # - openssl-blacklist-extra
  - clamav
  - clamav-freshclam
  - vim-doc
  - trash-cli
  - most
  - mc
  - manpages-fr
  - manpages-fr-dev
  - manpages-fr-extra
  - tig
  - git-extras
  - git-doc
  - synaptic
  - ctags
  - vim-gtk3
  - vim-nox
  - zsh-doc
  - terminator
  - gparted
  - fonts-inconsolata
  - cups-pdf
  - samba
  - bison
  - unace
  - filezilla
  - subversion
  - subversion-tools
  - git-flow
  - git-cola
  - git-svn
  - git-email
  - git-gui
  - mercurial
  # - mercurial-git
  # - hgsvn
  - cvs
  - meld
  - firefox
  - firefox-locale-fr
  - thunderbird
  - thunderbird-locale-fr
  - thunderbird-gnome-support
  - google-chrome-stable
  - chromium-browser
  - chromium-browser-l10n
  - chromium-codecs-ffmpeg
  - ubuntu-restricted-extras
  - keepassxc
  # - keepass2
  # - keepass2-doc
  - libreoffice
  - graphviz
  - gimp
  - inkscape
  # - nautilus-dropbox
  - gnome-control-center
  - gnome-tweak-tool
  - gedit-plugins
  - ooo-thumbnailer
  - pidgin
  - vlc
  - openjdk-11-jre
  - openjdk-11-jdk
  # - icedtea-9-plugin
  - gnucash
  - virtualbox-6.1
  - dkms
  - sipcalc
  - menulibre

python2_enabled: false

python_pip3_packages:
  - { name: 'jinja2-cli[yaml]'}

samba_workgroup: WORKGROUP

samba_users: {}
  # <user>: <password>
samba_shares: []
  # -
  #   path:
  #   group: ~
  #   public: no
  #   valid_users: []
  #   write_list: []
  #   create_mode: '0664'
  #   force_create_mode: '0664'
  #   directory_mode: '0775'
  #   force_directory_mode: '0775'

# list of packages to remove
apt_remove_packages: []

dnsmasq_addresses:
  -
    domain: localhost
    ip: 127.0.0.1
  -
    domain: dev
    ip: 127.0.0.1
  -
    domain: dev.localhost
    ip: 127.0.0.1
  -
    domain: dev.local
    ip: 127.0.0.1
  -
    domain: local.com
    ip: 127.0.0.1
  -
    domain: localhost.com
    ip: 127.0.0.1

docker_compose_by_pip: false
docker_machine_gitlab: true
docker_allowed_user:
  - "{{ account_default_user }}"

docker_debian_dependencies:
  - apt-transport-https
  - ca-certificates
  - curl
  - software-properties-common
  - acl
  - cgroup-lite
  - apparmor
  - linux-image-extra-virtual

atom_users:
  - username: "{{ account_default_user }}" # Unix user name
    atom_packages:
      - sync-settings
    # atom_config: # The config (in YAML not CSON)
    # atom_config_overwrite: yes # By default the config file will not be overwritten

zsh_users:
  -
    user: "{{ account_default_user }}"
    env_vars: "{{ account_default_user_env_vars }}"
    disable_auto_update: false
    disable_update_prompt: true
    hyphen_insensitive: true
    case_insensitive: false
    theme: csa
    # backup: yes
    # force: yes
    # custom theme files to copy to ~/.oh-my-zsh/themes
    custom_themes:
      - "{{ inventory_dir}}/files/home/oh-my-zsh/themes/csa.zsh-theme"
    plugins:
      - git
      - gitfast
      - mercurial
      - docker
      - docker-compose
      - docker-machine
      - kops
      - kubectl
      - minikube
      - npm
      - python
      - debian
      - screen
      - tmux
      - urltools
      - git-extras
      # - bower
      - debian
      - ansible
      - composer
      - encode64
      - terraform
      - vagrant
      - kubectl

aws_cli_users:
  - "{{ account_default_user }}"

aws_cli_bash_autocompletion: true
aws_cli_zsh_autocompletion: true

account_users:
  default_user:
    name: "{{ account_default_user }}"
    comment: "{{ account_default_user_fullname }}"
    # home: # default = /home/<username>
    # home_mode: #default = 'u=rwx,g=rx,o=rx'
    # home_owner: # default = <username>
    # home_group: # default = <username>
    # no_chown_home: false
    # system: no # is system user ?
    # group: # primary group
    group: "{{ account_default_user }}"
    groups:
      - docker
      - sudo
    # append_groups: # default yes
    shell: /usr/bin/zsh
    env_vars: "{{ account_default_user_env_vars }}"
    # uid:
    # lock: false # lock password authentication : only ssh key authentication is allowed
    # salt: # password salt, default = None
    config_files:
      # -
      #   src: "home/{{ ansible_os_family|lower }}/.bashrc.j2"
      #   dest: # default in /home/<username>/
      #   owner: # default = <username>
      #   group: # default = <username>
      #   mode: # default = 'u=rw,g=r,o=r'
      #   backup: yes
      #   force: no
      -
        src: "home/{{ ansible_os_family|lower }}/.bashrc.j2"
        backup: yes
        force: no
      -
        src: home/.bash_aliases.j2
        backup: yes
        force: yes
      # -
      #   src: "{{ inventory_dir}}/files/home/.gitconfig"
      -
        src: "{{ inventory_dir}}/files/home/.gitignore"
    color_prompt: yes
    ssh_agent_autostart: no
    gitconfig:
      raw_config:
        'mergetool "meld3"':
          cmd: "$HOME/bin/meld3 $BASE $LOCAL $REMOTE $MERGED"
      config:
        -
          name: 'user.name'
          option: '{{ account_default_user_fullname }}'
        -
          name: 'credential.helper'
          option: 'store'
        -
          name: 'commit.gpgsign'
          option: "{{ 'true' if account_git_gpg_key_id|default('') else 'false' }}"
        -
          name: 'core.excludesfile'
          option: '~/.gitignore'
        -
          name: 'core.autocrlf'
          option: 'input'
        -
          name: 'core.editor'
          option: 'vim'
        -
          name: 'credential.helper'
          option: 'store'
        -
          name: 'diff.tool'
          option: 'vimdiff'
        -
          name: 'merge.vimdiff'
          option: 'vimdiff'
        -
          name: 'merge.defaultToUpstream'
          option: 'true'
        -
          name: 'push.default'
          option: 'upstream'

        ## git_config file scope is currently bugged
        # -
        #   name: 'user.email'
        #   option: '{{ account_default_user_email }}'
        #   file: "~/.gitconfig-perso"
        #   scope: file
        # -
        #   name: 'user.signingkey'
        #   option: "{{ account_git_gpg_key_id|default('') }}"
        #   file: ".gitconfig-perso"
        #   scope: file
        # -
        #   name: 'user.email'
        #   option: '{{ account_pro_user_email }}'
        #   file: ".gitconfig-pro"
        #   scope: file
        # -
        #   name: 'user.signingkey'
        #   option: "{{ account_git_pro_gpg_key_id|default('') }}"
        #   file: ".gitconfig-pro"
        #   scope: file
      includeifs: "{{ git_includeifs }}"

# ; include for all repositories inside $HOME/git/perso
# [includeIf "gitdir:~/git/perso/"]
#   path = .gitconfig-perso

# ; include for all repositories inside $HOME/git/d_aim
# [includeIf "gitdir:~/git/d_aim/"]
#   path = .gitconfig-daim


  #  bash_aliases:
  #     <alias>: <command>

account_default_user_env_vars:
  -
    name: GOROOT
    value: "{{ golang_install_dir }}"
  -
    name: GOPATH
    value: "{{ golang_gopath }}"
  -
    name: PATH
    value: "$HOME/bin:$GOPATH/bin:$GOROOT/bin:/usr/local/bin:$PATH"

account_ssh_known_hosts:
  -
    user: "{{ account_default_user }}"
    hosts:
      - github.com
      - gitlab.com


kvm_gui: true
docker_kvm2_driver: true
kvm_allowed_user:
  - "{{ account_default_user }}"

google_cloud_sdk_install: apt # manual

google_cloud_sdk_users:
  -
    user: "{{ account_default_user }}"
    bash: true
    zsh: true

sublimetext_dl_source: "https://download.sublimetext.com"
sublimetext_build: 3176

# Go language SDK version number
golang_version: '1.18'
golang_redis_sha256sum: 'e85278e98f57cdb150fe8409e6e5df5343ecb13cebf03a5d5ff12bd55a80264f'
# golang_mirror: 'https://storage.googleapis.com/golang'
golang_mirror: 'https://go.dev/dl'
golang_install_dir: '/opt/go/{{ golang_version }}'
golang_download_dir: "{{ x_ansible_download_dir | default(ansible_env.HOME + '/.ansible/tmp/downloads') }}"
golang_gopath: "$HOME/go"

nodejs_version: "17.x"
nodejs_npm_global_packages:
  - name: yarn
  - name: meta

helm_version: "3.8.1"

aws_ecs_cli_enabled: false
aws_eb_cli_enabled: false
